/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stdio.h>

#define TIME2_IRQ 28
#define I2C1_EV_IRQ 31

#define NVIC_BASE_ADDRESS 0XE000E000

uint32_t *pNVIC_IPR = (uint32_t*)(NVIC_BASE_ADDRESS + 0x400);
uint32_t* pNVIC_ISPR = (uint32_t*)(NVIC_BASE_ADDRESS + 0x200 + (I2C1_EV_IRQ/32));
uint32_t* pNVIC_ISER = (uint32_t*)(NVIC_BASE_ADDRESS + 0x100 + (I2C1_EV_IRQ/32));

void Interrupt_Prioriy_Config(uint8_t irq_number , uint8_t priority){
	// find out iprx
	uint8_t iprx = irq_no / 4;
	printf("iqr : %d \n",iprx);
	uint32_t *ipr =  NVIC_IPR+iprx;

	// position in iprx
	uint8_t pos = (irq_number %4)*8 ;
	// config the priority
	*NVIC_IPR &= ~(0xFF << pos);//clear;
	*NVIC_IPR |= (priority << pos);

}


int main(void)
{
	//config priorty
	Interrupt_Prioriy_Config(TIME2_IRQ, 0x80);
	Interrupt_Prioriy_Config(I2C1_EV_IRQ, 0x60);
	//pending irq

	*pNVIC_ISPR |= (0x1 << (TIME2_IRQ %32));
	//enable irq
	//due to I2C1&Time2 in smae IRQ Group
	*pNVIC_ISER |= (0x1 <<(I2C1_EV_IRQ %32));
	*pNVIC_ISER |= (0x1 <<(TIME2_IRQ %32));


    /* Loop forever */
	for(;;);
}

void I2C1_EV_IRQHandler(){
	printf("Now is In I2C1 IRQ \n");
}

void TIM2_IRQHandler(){
	printf("Now is In TIM2 IRQ \n");
	*pNVIC_ISPR |= (0x1 << (I2C1_EV_IRQ %32));
	while(1);
}


