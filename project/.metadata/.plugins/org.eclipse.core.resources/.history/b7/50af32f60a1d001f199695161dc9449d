/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stdio.h>


int main(void)
{
	__asm("SVC #0x05");
	register uint32_t data __asm("r0");// 這樣創造出來的變量不會儲存在堆棧中，而是創造一個處理器的寄存器
	//跟下面相等
	//uint32_t data;
	//__asm volatile("MOV %0,R0":"=r"(data)::);


	printf("data = %ld \n" , data);


    /* Loop forever */
	for(;;);
}
__attribute__((naked))int SVC_Handler(){// when we wanna use data in sp need kepp naked
	__asm("MRS R0,MSP");
	__asm("B SVC_Handler_c");//function call
}
void SVC_Handler_c(uint32_t* pBaseOfStack){
	printf("in SVC Handler_c\n");
	uint8_t* pReturn_addr = (uint8_t*)pBaseOfStack[6];
	pReturn_addr -= 2;
	uint8_t svcNumber = *pReturn_addr;
	printf("SVC Number in prev contain : %d \n",svcNumber);
	svcNumber+=4;// mission need
	pBaseOfStack[0] = svcNumber;
}
