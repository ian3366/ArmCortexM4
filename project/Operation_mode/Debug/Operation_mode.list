
Operation_mode.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c0c  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000060  08000dd0  08000dd0  00001dd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000e30  08000e30  0000205c  2**0
                  CONTENTS
  4 .ARM          00000000  08000e30  08000e30  0000205c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e30  08000e30  0000205c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000e30  08000e30  00001e30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000e34  08000e34  00001e34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08000e38  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08000e94  0000205c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08000e94  000021c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000205c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000095f  00000000  00000000  0000208c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000335  00000000  00000000  000029eb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000128  00000000  00000000  00002d20  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000ca  00000000  00000000  00002e48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002cca  00000000  00000000  00002f12  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000148b  00000000  00000000  00005bdc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000097df  00000000  00000000  00007067  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00010846  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000a14  00000000  00000000  0001088c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000061  00000000  00000000  000112a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	2000005c 	.word	0x2000005c
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000db8 	.word	0x08000db8

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000060 	.word	0x20000060
 8000200:	08000db8 	.word	0x08000db8

08000204 <generate_interrupt>:

#include <stdint.h>
#include <stdio.h>

void generate_interrupt()
{
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
	uint32_t* pSTIR = (uint32_t*)0xE000EF00;
 800020a:	4b0b      	ldr	r3, [pc, #44]	@ (8000238 <generate_interrupt+0x34>)
 800020c:	607b      	str	r3, [r7, #4]
	uint32_t* pISER0 = (uint32_t*)0xE000E100;
 800020e:	4b0b      	ldr	r3, [pc, #44]	@ (800023c <generate_interrupt+0x38>)
 8000210:	603b      	str	r3, [r7, #0]

	//enable IRQ3 interrupt
	*pISER0 |= (1<<3);
 8000212:	683b      	ldr	r3, [r7, #0]
 8000214:	681b      	ldr	r3, [r3, #0]
 8000216:	f043 0208 	orr.w	r2, r3, #8
 800021a:	683b      	ldr	r3, [r7, #0]
 800021c:	601a      	str	r2, [r3, #0]
	//gen interrupt
	*pSTIR 	|= (3 & 0x1FF);
 800021e:	687b      	ldr	r3, [r7, #4]
 8000220:	681b      	ldr	r3, [r3, #0]
 8000222:	f043 0203 	orr.w	r2, r3, #3
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	601a      	str	r2, [r3, #0]

}
 800022a:	bf00      	nop
 800022c:	370c      	adds	r7, #12
 800022e:	46bd      	mov	sp, r7
 8000230:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000234:	4770      	bx	lr
 8000236:	bf00      	nop
 8000238:	e000ef00 	.word	0xe000ef00
 800023c:	e000e100 	.word	0xe000e100

08000240 <main>:

int main(void)
{
 8000240:	b580      	push	{r7, lr}
 8000242:	af00      	add	r7, sp, #0
    /* Loop forever */
	printf("In Thread Mode : before Interrupt \n");
 8000244:	4804      	ldr	r0, [pc, #16]	@ (8000258 <main+0x18>)
 8000246:	f000 fa23 	bl	8000690 <puts>
	generate_interrupt();
 800024a:	f7ff ffdb 	bl	8000204 <generate_interrupt>
	printf("In Thread Mode : after Interrupt \n" );
 800024e:	4803      	ldr	r0, [pc, #12]	@ (800025c <main+0x1c>)
 8000250:	f000 fa1e 	bl	8000690 <puts>


	for(;;);
 8000254:	bf00      	nop
 8000256:	e7fd      	b.n	8000254 <main+0x14>
 8000258:	08000dd0 	.word	0x08000dd0
 800025c:	08000df4 	.word	0x08000df4

08000260 <RTC_WKUP_IRQHandler>:
}

void RTC_WKUP_IRQHandler(void){
 8000260:	b580      	push	{r7, lr}
 8000262:	af00      	add	r7, sp, #0
	printf("In Handler Mode : ISR \n"); //   interrupt service routine
 8000264:	4802      	ldr	r0, [pc, #8]	@ (8000270 <RTC_WKUP_IRQHandler+0x10>)
 8000266:	f000 fa13 	bl	8000690 <puts>
}
 800026a:	bf00      	nop
 800026c:	bd80      	pop	{r7, pc}
 800026e:	bf00      	nop
 8000270:	08000e18 	.word	0x08000e18

08000274 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000274:	b480      	push	{r7}
 8000276:	b083      	sub	sp, #12
 8000278:	af00      	add	r7, sp, #0
 800027a:	4603      	mov	r3, r0
 800027c:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800027e:	4b0f      	ldr	r3, [pc, #60]	@ (80002bc <ITM_SendChar+0x48>)
 8000280:	681b      	ldr	r3, [r3, #0]
 8000282:	4a0e      	ldr	r2, [pc, #56]	@ (80002bc <ITM_SendChar+0x48>)
 8000284:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000288:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800028a:	4b0d      	ldr	r3, [pc, #52]	@ (80002c0 <ITM_SendChar+0x4c>)
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	4a0c      	ldr	r2, [pc, #48]	@ (80002c0 <ITM_SendChar+0x4c>)
 8000290:	f043 0301 	orr.w	r3, r3, #1
 8000294:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000296:	bf00      	nop
 8000298:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	f003 0301 	and.w	r3, r3, #1
 80002a2:	2b00      	cmp	r3, #0
 80002a4:	d0f8      	beq.n	8000298 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80002a6:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 80002aa:	79fb      	ldrb	r3, [r7, #7]
 80002ac:	6013      	str	r3, [r2, #0]
}
 80002ae:	bf00      	nop
 80002b0:	370c      	adds	r7, #12
 80002b2:	46bd      	mov	sp, r7
 80002b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002b8:	4770      	bx	lr
 80002ba:	bf00      	nop
 80002bc:	e000edfc 	.word	0xe000edfc
 80002c0:	e0000e00 	.word	0xe0000e00

080002c4 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002c4:	b580      	push	{r7, lr}
 80002c6:	b086      	sub	sp, #24
 80002c8:	af00      	add	r7, sp, #0
 80002ca:	60f8      	str	r0, [r7, #12]
 80002cc:	60b9      	str	r1, [r7, #8]
 80002ce:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002d0:	2300      	movs	r3, #0
 80002d2:	617b      	str	r3, [r7, #20]
 80002d4:	e00a      	b.n	80002ec <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002d6:	f3af 8000 	nop.w
 80002da:	4601      	mov	r1, r0
 80002dc:	68bb      	ldr	r3, [r7, #8]
 80002de:	1c5a      	adds	r2, r3, #1
 80002e0:	60ba      	str	r2, [r7, #8]
 80002e2:	b2ca      	uxtb	r2, r1
 80002e4:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002e6:	697b      	ldr	r3, [r7, #20]
 80002e8:	3301      	adds	r3, #1
 80002ea:	617b      	str	r3, [r7, #20]
 80002ec:	697a      	ldr	r2, [r7, #20]
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	429a      	cmp	r2, r3
 80002f2:	dbf0      	blt.n	80002d6 <_read+0x12>
  }

  return len;
 80002f4:	687b      	ldr	r3, [r7, #4]
}
 80002f6:	4618      	mov	r0, r3
 80002f8:	3718      	adds	r7, #24
 80002fa:	46bd      	mov	sp, r7
 80002fc:	bd80      	pop	{r7, pc}

080002fe <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80002fe:	b580      	push	{r7, lr}
 8000300:	b086      	sub	sp, #24
 8000302:	af00      	add	r7, sp, #0
 8000304:	60f8      	str	r0, [r7, #12]
 8000306:	60b9      	str	r1, [r7, #8]
 8000308:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800030a:	2300      	movs	r3, #0
 800030c:	617b      	str	r3, [r7, #20]
 800030e:	e009      	b.n	8000324 <_write+0x26>
  {
//    __io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000310:	68bb      	ldr	r3, [r7, #8]
 8000312:	1c5a      	adds	r2, r3, #1
 8000314:	60ba      	str	r2, [r7, #8]
 8000316:	781b      	ldrb	r3, [r3, #0]
 8000318:	4618      	mov	r0, r3
 800031a:	f7ff ffab 	bl	8000274 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800031e:	697b      	ldr	r3, [r7, #20]
 8000320:	3301      	adds	r3, #1
 8000322:	617b      	str	r3, [r7, #20]
 8000324:	697a      	ldr	r2, [r7, #20]
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	429a      	cmp	r2, r3
 800032a:	dbf1      	blt.n	8000310 <_write+0x12>
  }
  return len;
 800032c:	687b      	ldr	r3, [r7, #4]
}
 800032e:	4618      	mov	r0, r3
 8000330:	3718      	adds	r7, #24
 8000332:	46bd      	mov	sp, r7
 8000334:	bd80      	pop	{r7, pc}

08000336 <_close>:

int _close(int file)
{
 8000336:	b480      	push	{r7}
 8000338:	b083      	sub	sp, #12
 800033a:	af00      	add	r7, sp, #0
 800033c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800033e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000342:	4618      	mov	r0, r3
 8000344:	370c      	adds	r7, #12
 8000346:	46bd      	mov	sp, r7
 8000348:	f85d 7b04 	ldr.w	r7, [sp], #4
 800034c:	4770      	bx	lr

0800034e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800034e:	b480      	push	{r7}
 8000350:	b083      	sub	sp, #12
 8000352:	af00      	add	r7, sp, #0
 8000354:	6078      	str	r0, [r7, #4]
 8000356:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000358:	683b      	ldr	r3, [r7, #0]
 800035a:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800035e:	605a      	str	r2, [r3, #4]
  return 0;
 8000360:	2300      	movs	r3, #0
}
 8000362:	4618      	mov	r0, r3
 8000364:	370c      	adds	r7, #12
 8000366:	46bd      	mov	sp, r7
 8000368:	f85d 7b04 	ldr.w	r7, [sp], #4
 800036c:	4770      	bx	lr

0800036e <_isatty>:

int _isatty(int file)
{
 800036e:	b480      	push	{r7}
 8000370:	b083      	sub	sp, #12
 8000372:	af00      	add	r7, sp, #0
 8000374:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000376:	2301      	movs	r3, #1
}
 8000378:	4618      	mov	r0, r3
 800037a:	370c      	adds	r7, #12
 800037c:	46bd      	mov	sp, r7
 800037e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000382:	4770      	bx	lr

08000384 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000384:	b480      	push	{r7}
 8000386:	b085      	sub	sp, #20
 8000388:	af00      	add	r7, sp, #0
 800038a:	60f8      	str	r0, [r7, #12]
 800038c:	60b9      	str	r1, [r7, #8]
 800038e:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000390:	2300      	movs	r3, #0
}
 8000392:	4618      	mov	r0, r3
 8000394:	3714      	adds	r7, #20
 8000396:	46bd      	mov	sp, r7
 8000398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800039c:	4770      	bx	lr
	...

080003a0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003a0:	b580      	push	{r7, lr}
 80003a2:	b086      	sub	sp, #24
 80003a4:	af00      	add	r7, sp, #0
 80003a6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003a8:	4a14      	ldr	r2, [pc, #80]	@ (80003fc <_sbrk+0x5c>)
 80003aa:	4b15      	ldr	r3, [pc, #84]	@ (8000400 <_sbrk+0x60>)
 80003ac:	1ad3      	subs	r3, r2, r3
 80003ae:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003b0:	697b      	ldr	r3, [r7, #20]
 80003b2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003b4:	4b13      	ldr	r3, [pc, #76]	@ (8000404 <_sbrk+0x64>)
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	2b00      	cmp	r3, #0
 80003ba:	d102      	bne.n	80003c2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003bc:	4b11      	ldr	r3, [pc, #68]	@ (8000404 <_sbrk+0x64>)
 80003be:	4a12      	ldr	r2, [pc, #72]	@ (8000408 <_sbrk+0x68>)
 80003c0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003c2:	4b10      	ldr	r3, [pc, #64]	@ (8000404 <_sbrk+0x64>)
 80003c4:	681a      	ldr	r2, [r3, #0]
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	4413      	add	r3, r2
 80003ca:	693a      	ldr	r2, [r7, #16]
 80003cc:	429a      	cmp	r2, r3
 80003ce:	d207      	bcs.n	80003e0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003d0:	f000 fa8c 	bl	80008ec <__errno>
 80003d4:	4603      	mov	r3, r0
 80003d6:	220c      	movs	r2, #12
 80003d8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003da:	f04f 33ff 	mov.w	r3, #4294967295
 80003de:	e009      	b.n	80003f4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003e0:	4b08      	ldr	r3, [pc, #32]	@ (8000404 <_sbrk+0x64>)
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003e6:	4b07      	ldr	r3, [pc, #28]	@ (8000404 <_sbrk+0x64>)
 80003e8:	681a      	ldr	r2, [r3, #0]
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	4413      	add	r3, r2
 80003ee:	4a05      	ldr	r2, [pc, #20]	@ (8000404 <_sbrk+0x64>)
 80003f0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003f2:	68fb      	ldr	r3, [r7, #12]
}
 80003f4:	4618      	mov	r0, r3
 80003f6:	3718      	adds	r7, #24
 80003f8:	46bd      	mov	sp, r7
 80003fa:	bd80      	pop	{r7, pc}
 80003fc:	20020000 	.word	0x20020000
 8000400:	00000400 	.word	0x00000400
 8000404:	20000078 	.word	0x20000078
 8000408:	200001c8 	.word	0x200001c8

0800040c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800040c:	480d      	ldr	r0, [pc, #52]	@ (8000444 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800040e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000410:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000414:	480c      	ldr	r0, [pc, #48]	@ (8000448 <LoopForever+0x6>)
  ldr r1, =_edata
 8000416:	490d      	ldr	r1, [pc, #52]	@ (800044c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000418:	4a0d      	ldr	r2, [pc, #52]	@ (8000450 <LoopForever+0xe>)
  movs r3, #0
 800041a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800041c:	e002      	b.n	8000424 <LoopCopyDataInit>

0800041e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800041e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000420:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000422:	3304      	adds	r3, #4

08000424 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000424:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000426:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000428:	d3f9      	bcc.n	800041e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800042a:	4a0a      	ldr	r2, [pc, #40]	@ (8000454 <LoopForever+0x12>)
  ldr r4, =_ebss
 800042c:	4c0a      	ldr	r4, [pc, #40]	@ (8000458 <LoopForever+0x16>)
  movs r3, #0
 800042e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000430:	e001      	b.n	8000436 <LoopFillZerobss>

08000432 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000432:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000434:	3204      	adds	r2, #4

08000436 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000436:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000438:	d3fb      	bcc.n	8000432 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800043a:	f000 fa5d 	bl	80008f8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800043e:	f7ff feff 	bl	8000240 <main>

08000442 <LoopForever>:

LoopForever:
  b LoopForever
 8000442:	e7fe      	b.n	8000442 <LoopForever>
  ldr   r0, =_estack
 8000444:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000448:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800044c:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000450:	08000e38 	.word	0x08000e38
  ldr r2, =_sbss
 8000454:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000458:	200001c8 	.word	0x200001c8

0800045c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800045c:	e7fe      	b.n	800045c <ADC_IRQHandler>
	...

08000460 <std>:
 8000460:	2300      	movs	r3, #0
 8000462:	b510      	push	{r4, lr}
 8000464:	4604      	mov	r4, r0
 8000466:	e9c0 3300 	strd	r3, r3, [r0]
 800046a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800046e:	6083      	str	r3, [r0, #8]
 8000470:	8181      	strh	r1, [r0, #12]
 8000472:	6643      	str	r3, [r0, #100]	@ 0x64
 8000474:	81c2      	strh	r2, [r0, #14]
 8000476:	6183      	str	r3, [r0, #24]
 8000478:	4619      	mov	r1, r3
 800047a:	2208      	movs	r2, #8
 800047c:	305c      	adds	r0, #92	@ 0x5c
 800047e:	f000 f9e7 	bl	8000850 <memset>
 8000482:	4b0d      	ldr	r3, [pc, #52]	@ (80004b8 <std+0x58>)
 8000484:	6263      	str	r3, [r4, #36]	@ 0x24
 8000486:	4b0d      	ldr	r3, [pc, #52]	@ (80004bc <std+0x5c>)
 8000488:	62a3      	str	r3, [r4, #40]	@ 0x28
 800048a:	4b0d      	ldr	r3, [pc, #52]	@ (80004c0 <std+0x60>)
 800048c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800048e:	4b0d      	ldr	r3, [pc, #52]	@ (80004c4 <std+0x64>)
 8000490:	6323      	str	r3, [r4, #48]	@ 0x30
 8000492:	4b0d      	ldr	r3, [pc, #52]	@ (80004c8 <std+0x68>)
 8000494:	6224      	str	r4, [r4, #32]
 8000496:	429c      	cmp	r4, r3
 8000498:	d006      	beq.n	80004a8 <std+0x48>
 800049a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800049e:	4294      	cmp	r4, r2
 80004a0:	d002      	beq.n	80004a8 <std+0x48>
 80004a2:	33d0      	adds	r3, #208	@ 0xd0
 80004a4:	429c      	cmp	r4, r3
 80004a6:	d105      	bne.n	80004b4 <std+0x54>
 80004a8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80004ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004b0:	f000 ba46 	b.w	8000940 <__retarget_lock_init_recursive>
 80004b4:	bd10      	pop	{r4, pc}
 80004b6:	bf00      	nop
 80004b8:	080006a1 	.word	0x080006a1
 80004bc:	080006c3 	.word	0x080006c3
 80004c0:	080006fb 	.word	0x080006fb
 80004c4:	0800071f 	.word	0x0800071f
 80004c8:	2000007c 	.word	0x2000007c

080004cc <stdio_exit_handler>:
 80004cc:	4a02      	ldr	r2, [pc, #8]	@ (80004d8 <stdio_exit_handler+0xc>)
 80004ce:	4903      	ldr	r1, [pc, #12]	@ (80004dc <stdio_exit_handler+0x10>)
 80004d0:	4803      	ldr	r0, [pc, #12]	@ (80004e0 <stdio_exit_handler+0x14>)
 80004d2:	f000 b869 	b.w	80005a8 <_fwalk_sglue>
 80004d6:	bf00      	nop
 80004d8:	20000000 	.word	0x20000000
 80004dc:	08000c41 	.word	0x08000c41
 80004e0:	20000010 	.word	0x20000010

080004e4 <cleanup_stdio>:
 80004e4:	6841      	ldr	r1, [r0, #4]
 80004e6:	4b0c      	ldr	r3, [pc, #48]	@ (8000518 <cleanup_stdio+0x34>)
 80004e8:	4299      	cmp	r1, r3
 80004ea:	b510      	push	{r4, lr}
 80004ec:	4604      	mov	r4, r0
 80004ee:	d001      	beq.n	80004f4 <cleanup_stdio+0x10>
 80004f0:	f000 fba6 	bl	8000c40 <_fflush_r>
 80004f4:	68a1      	ldr	r1, [r4, #8]
 80004f6:	4b09      	ldr	r3, [pc, #36]	@ (800051c <cleanup_stdio+0x38>)
 80004f8:	4299      	cmp	r1, r3
 80004fa:	d002      	beq.n	8000502 <cleanup_stdio+0x1e>
 80004fc:	4620      	mov	r0, r4
 80004fe:	f000 fb9f 	bl	8000c40 <_fflush_r>
 8000502:	68e1      	ldr	r1, [r4, #12]
 8000504:	4b06      	ldr	r3, [pc, #24]	@ (8000520 <cleanup_stdio+0x3c>)
 8000506:	4299      	cmp	r1, r3
 8000508:	d004      	beq.n	8000514 <cleanup_stdio+0x30>
 800050a:	4620      	mov	r0, r4
 800050c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000510:	f000 bb96 	b.w	8000c40 <_fflush_r>
 8000514:	bd10      	pop	{r4, pc}
 8000516:	bf00      	nop
 8000518:	2000007c 	.word	0x2000007c
 800051c:	200000e4 	.word	0x200000e4
 8000520:	2000014c 	.word	0x2000014c

08000524 <global_stdio_init.part.0>:
 8000524:	b510      	push	{r4, lr}
 8000526:	4b0b      	ldr	r3, [pc, #44]	@ (8000554 <global_stdio_init.part.0+0x30>)
 8000528:	4c0b      	ldr	r4, [pc, #44]	@ (8000558 <global_stdio_init.part.0+0x34>)
 800052a:	4a0c      	ldr	r2, [pc, #48]	@ (800055c <global_stdio_init.part.0+0x38>)
 800052c:	601a      	str	r2, [r3, #0]
 800052e:	4620      	mov	r0, r4
 8000530:	2200      	movs	r2, #0
 8000532:	2104      	movs	r1, #4
 8000534:	f7ff ff94 	bl	8000460 <std>
 8000538:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800053c:	2201      	movs	r2, #1
 800053e:	2109      	movs	r1, #9
 8000540:	f7ff ff8e 	bl	8000460 <std>
 8000544:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000548:	2202      	movs	r2, #2
 800054a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800054e:	2112      	movs	r1, #18
 8000550:	f7ff bf86 	b.w	8000460 <std>
 8000554:	200001b4 	.word	0x200001b4
 8000558:	2000007c 	.word	0x2000007c
 800055c:	080004cd 	.word	0x080004cd

08000560 <__sfp_lock_acquire>:
 8000560:	4801      	ldr	r0, [pc, #4]	@ (8000568 <__sfp_lock_acquire+0x8>)
 8000562:	f000 b9ee 	b.w	8000942 <__retarget_lock_acquire_recursive>
 8000566:	bf00      	nop
 8000568:	200001bd 	.word	0x200001bd

0800056c <__sfp_lock_release>:
 800056c:	4801      	ldr	r0, [pc, #4]	@ (8000574 <__sfp_lock_release+0x8>)
 800056e:	f000 b9e9 	b.w	8000944 <__retarget_lock_release_recursive>
 8000572:	bf00      	nop
 8000574:	200001bd 	.word	0x200001bd

08000578 <__sinit>:
 8000578:	b510      	push	{r4, lr}
 800057a:	4604      	mov	r4, r0
 800057c:	f7ff fff0 	bl	8000560 <__sfp_lock_acquire>
 8000580:	6a23      	ldr	r3, [r4, #32]
 8000582:	b11b      	cbz	r3, 800058c <__sinit+0x14>
 8000584:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000588:	f7ff bff0 	b.w	800056c <__sfp_lock_release>
 800058c:	4b04      	ldr	r3, [pc, #16]	@ (80005a0 <__sinit+0x28>)
 800058e:	6223      	str	r3, [r4, #32]
 8000590:	4b04      	ldr	r3, [pc, #16]	@ (80005a4 <__sinit+0x2c>)
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	2b00      	cmp	r3, #0
 8000596:	d1f5      	bne.n	8000584 <__sinit+0xc>
 8000598:	f7ff ffc4 	bl	8000524 <global_stdio_init.part.0>
 800059c:	e7f2      	b.n	8000584 <__sinit+0xc>
 800059e:	bf00      	nop
 80005a0:	080004e5 	.word	0x080004e5
 80005a4:	200001b4 	.word	0x200001b4

080005a8 <_fwalk_sglue>:
 80005a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005ac:	4607      	mov	r7, r0
 80005ae:	4688      	mov	r8, r1
 80005b0:	4614      	mov	r4, r2
 80005b2:	2600      	movs	r6, #0
 80005b4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80005b8:	f1b9 0901 	subs.w	r9, r9, #1
 80005bc:	d505      	bpl.n	80005ca <_fwalk_sglue+0x22>
 80005be:	6824      	ldr	r4, [r4, #0]
 80005c0:	2c00      	cmp	r4, #0
 80005c2:	d1f7      	bne.n	80005b4 <_fwalk_sglue+0xc>
 80005c4:	4630      	mov	r0, r6
 80005c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80005ca:	89ab      	ldrh	r3, [r5, #12]
 80005cc:	2b01      	cmp	r3, #1
 80005ce:	d907      	bls.n	80005e0 <_fwalk_sglue+0x38>
 80005d0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80005d4:	3301      	adds	r3, #1
 80005d6:	d003      	beq.n	80005e0 <_fwalk_sglue+0x38>
 80005d8:	4629      	mov	r1, r5
 80005da:	4638      	mov	r0, r7
 80005dc:	47c0      	blx	r8
 80005de:	4306      	orrs	r6, r0
 80005e0:	3568      	adds	r5, #104	@ 0x68
 80005e2:	e7e9      	b.n	80005b8 <_fwalk_sglue+0x10>

080005e4 <_puts_r>:
 80005e4:	6a03      	ldr	r3, [r0, #32]
 80005e6:	b570      	push	{r4, r5, r6, lr}
 80005e8:	6884      	ldr	r4, [r0, #8]
 80005ea:	4605      	mov	r5, r0
 80005ec:	460e      	mov	r6, r1
 80005ee:	b90b      	cbnz	r3, 80005f4 <_puts_r+0x10>
 80005f0:	f7ff ffc2 	bl	8000578 <__sinit>
 80005f4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80005f6:	07db      	lsls	r3, r3, #31
 80005f8:	d405      	bmi.n	8000606 <_puts_r+0x22>
 80005fa:	89a3      	ldrh	r3, [r4, #12]
 80005fc:	0598      	lsls	r0, r3, #22
 80005fe:	d402      	bmi.n	8000606 <_puts_r+0x22>
 8000600:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000602:	f000 f99e 	bl	8000942 <__retarget_lock_acquire_recursive>
 8000606:	89a3      	ldrh	r3, [r4, #12]
 8000608:	0719      	lsls	r1, r3, #28
 800060a:	d502      	bpl.n	8000612 <_puts_r+0x2e>
 800060c:	6923      	ldr	r3, [r4, #16]
 800060e:	2b00      	cmp	r3, #0
 8000610:	d135      	bne.n	800067e <_puts_r+0x9a>
 8000612:	4621      	mov	r1, r4
 8000614:	4628      	mov	r0, r5
 8000616:	f000 f8c5 	bl	80007a4 <__swsetup_r>
 800061a:	b380      	cbz	r0, 800067e <_puts_r+0x9a>
 800061c:	f04f 35ff 	mov.w	r5, #4294967295
 8000620:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000622:	07da      	lsls	r2, r3, #31
 8000624:	d405      	bmi.n	8000632 <_puts_r+0x4e>
 8000626:	89a3      	ldrh	r3, [r4, #12]
 8000628:	059b      	lsls	r3, r3, #22
 800062a:	d402      	bmi.n	8000632 <_puts_r+0x4e>
 800062c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800062e:	f000 f989 	bl	8000944 <__retarget_lock_release_recursive>
 8000632:	4628      	mov	r0, r5
 8000634:	bd70      	pop	{r4, r5, r6, pc}
 8000636:	2b00      	cmp	r3, #0
 8000638:	da04      	bge.n	8000644 <_puts_r+0x60>
 800063a:	69a2      	ldr	r2, [r4, #24]
 800063c:	429a      	cmp	r2, r3
 800063e:	dc17      	bgt.n	8000670 <_puts_r+0x8c>
 8000640:	290a      	cmp	r1, #10
 8000642:	d015      	beq.n	8000670 <_puts_r+0x8c>
 8000644:	6823      	ldr	r3, [r4, #0]
 8000646:	1c5a      	adds	r2, r3, #1
 8000648:	6022      	str	r2, [r4, #0]
 800064a:	7019      	strb	r1, [r3, #0]
 800064c:	68a3      	ldr	r3, [r4, #8]
 800064e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000652:	3b01      	subs	r3, #1
 8000654:	60a3      	str	r3, [r4, #8]
 8000656:	2900      	cmp	r1, #0
 8000658:	d1ed      	bne.n	8000636 <_puts_r+0x52>
 800065a:	2b00      	cmp	r3, #0
 800065c:	da11      	bge.n	8000682 <_puts_r+0x9e>
 800065e:	4622      	mov	r2, r4
 8000660:	210a      	movs	r1, #10
 8000662:	4628      	mov	r0, r5
 8000664:	f000 f85f 	bl	8000726 <__swbuf_r>
 8000668:	3001      	adds	r0, #1
 800066a:	d0d7      	beq.n	800061c <_puts_r+0x38>
 800066c:	250a      	movs	r5, #10
 800066e:	e7d7      	b.n	8000620 <_puts_r+0x3c>
 8000670:	4622      	mov	r2, r4
 8000672:	4628      	mov	r0, r5
 8000674:	f000 f857 	bl	8000726 <__swbuf_r>
 8000678:	3001      	adds	r0, #1
 800067a:	d1e7      	bne.n	800064c <_puts_r+0x68>
 800067c:	e7ce      	b.n	800061c <_puts_r+0x38>
 800067e:	3e01      	subs	r6, #1
 8000680:	e7e4      	b.n	800064c <_puts_r+0x68>
 8000682:	6823      	ldr	r3, [r4, #0]
 8000684:	1c5a      	adds	r2, r3, #1
 8000686:	6022      	str	r2, [r4, #0]
 8000688:	220a      	movs	r2, #10
 800068a:	701a      	strb	r2, [r3, #0]
 800068c:	e7ee      	b.n	800066c <_puts_r+0x88>
	...

08000690 <puts>:
 8000690:	4b02      	ldr	r3, [pc, #8]	@ (800069c <puts+0xc>)
 8000692:	4601      	mov	r1, r0
 8000694:	6818      	ldr	r0, [r3, #0]
 8000696:	f7ff bfa5 	b.w	80005e4 <_puts_r>
 800069a:	bf00      	nop
 800069c:	2000000c 	.word	0x2000000c

080006a0 <__sread>:
 80006a0:	b510      	push	{r4, lr}
 80006a2:	460c      	mov	r4, r1
 80006a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006a8:	f000 f8fc 	bl	80008a4 <_read_r>
 80006ac:	2800      	cmp	r0, #0
 80006ae:	bfab      	itete	ge
 80006b0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80006b2:	89a3      	ldrhlt	r3, [r4, #12]
 80006b4:	181b      	addge	r3, r3, r0
 80006b6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80006ba:	bfac      	ite	ge
 80006bc:	6563      	strge	r3, [r4, #84]	@ 0x54
 80006be:	81a3      	strhlt	r3, [r4, #12]
 80006c0:	bd10      	pop	{r4, pc}

080006c2 <__swrite>:
 80006c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006c6:	461f      	mov	r7, r3
 80006c8:	898b      	ldrh	r3, [r1, #12]
 80006ca:	05db      	lsls	r3, r3, #23
 80006cc:	4605      	mov	r5, r0
 80006ce:	460c      	mov	r4, r1
 80006d0:	4616      	mov	r6, r2
 80006d2:	d505      	bpl.n	80006e0 <__swrite+0x1e>
 80006d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006d8:	2302      	movs	r3, #2
 80006da:	2200      	movs	r2, #0
 80006dc:	f000 f8d0 	bl	8000880 <_lseek_r>
 80006e0:	89a3      	ldrh	r3, [r4, #12]
 80006e2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80006e6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80006ea:	81a3      	strh	r3, [r4, #12]
 80006ec:	4632      	mov	r2, r6
 80006ee:	463b      	mov	r3, r7
 80006f0:	4628      	mov	r0, r5
 80006f2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80006f6:	f000 b8e7 	b.w	80008c8 <_write_r>

080006fa <__sseek>:
 80006fa:	b510      	push	{r4, lr}
 80006fc:	460c      	mov	r4, r1
 80006fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000702:	f000 f8bd 	bl	8000880 <_lseek_r>
 8000706:	1c43      	adds	r3, r0, #1
 8000708:	89a3      	ldrh	r3, [r4, #12]
 800070a:	bf15      	itete	ne
 800070c:	6560      	strne	r0, [r4, #84]	@ 0x54
 800070e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000712:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000716:	81a3      	strheq	r3, [r4, #12]
 8000718:	bf18      	it	ne
 800071a:	81a3      	strhne	r3, [r4, #12]
 800071c:	bd10      	pop	{r4, pc}

0800071e <__sclose>:
 800071e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000722:	f000 b89d 	b.w	8000860 <_close_r>

08000726 <__swbuf_r>:
 8000726:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000728:	460e      	mov	r6, r1
 800072a:	4614      	mov	r4, r2
 800072c:	4605      	mov	r5, r0
 800072e:	b118      	cbz	r0, 8000738 <__swbuf_r+0x12>
 8000730:	6a03      	ldr	r3, [r0, #32]
 8000732:	b90b      	cbnz	r3, 8000738 <__swbuf_r+0x12>
 8000734:	f7ff ff20 	bl	8000578 <__sinit>
 8000738:	69a3      	ldr	r3, [r4, #24]
 800073a:	60a3      	str	r3, [r4, #8]
 800073c:	89a3      	ldrh	r3, [r4, #12]
 800073e:	071a      	lsls	r2, r3, #28
 8000740:	d501      	bpl.n	8000746 <__swbuf_r+0x20>
 8000742:	6923      	ldr	r3, [r4, #16]
 8000744:	b943      	cbnz	r3, 8000758 <__swbuf_r+0x32>
 8000746:	4621      	mov	r1, r4
 8000748:	4628      	mov	r0, r5
 800074a:	f000 f82b 	bl	80007a4 <__swsetup_r>
 800074e:	b118      	cbz	r0, 8000758 <__swbuf_r+0x32>
 8000750:	f04f 37ff 	mov.w	r7, #4294967295
 8000754:	4638      	mov	r0, r7
 8000756:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000758:	6823      	ldr	r3, [r4, #0]
 800075a:	6922      	ldr	r2, [r4, #16]
 800075c:	1a98      	subs	r0, r3, r2
 800075e:	6963      	ldr	r3, [r4, #20]
 8000760:	b2f6      	uxtb	r6, r6
 8000762:	4283      	cmp	r3, r0
 8000764:	4637      	mov	r7, r6
 8000766:	dc05      	bgt.n	8000774 <__swbuf_r+0x4e>
 8000768:	4621      	mov	r1, r4
 800076a:	4628      	mov	r0, r5
 800076c:	f000 fa68 	bl	8000c40 <_fflush_r>
 8000770:	2800      	cmp	r0, #0
 8000772:	d1ed      	bne.n	8000750 <__swbuf_r+0x2a>
 8000774:	68a3      	ldr	r3, [r4, #8]
 8000776:	3b01      	subs	r3, #1
 8000778:	60a3      	str	r3, [r4, #8]
 800077a:	6823      	ldr	r3, [r4, #0]
 800077c:	1c5a      	adds	r2, r3, #1
 800077e:	6022      	str	r2, [r4, #0]
 8000780:	701e      	strb	r6, [r3, #0]
 8000782:	6962      	ldr	r2, [r4, #20]
 8000784:	1c43      	adds	r3, r0, #1
 8000786:	429a      	cmp	r2, r3
 8000788:	d004      	beq.n	8000794 <__swbuf_r+0x6e>
 800078a:	89a3      	ldrh	r3, [r4, #12]
 800078c:	07db      	lsls	r3, r3, #31
 800078e:	d5e1      	bpl.n	8000754 <__swbuf_r+0x2e>
 8000790:	2e0a      	cmp	r6, #10
 8000792:	d1df      	bne.n	8000754 <__swbuf_r+0x2e>
 8000794:	4621      	mov	r1, r4
 8000796:	4628      	mov	r0, r5
 8000798:	f000 fa52 	bl	8000c40 <_fflush_r>
 800079c:	2800      	cmp	r0, #0
 800079e:	d0d9      	beq.n	8000754 <__swbuf_r+0x2e>
 80007a0:	e7d6      	b.n	8000750 <__swbuf_r+0x2a>
	...

080007a4 <__swsetup_r>:
 80007a4:	b538      	push	{r3, r4, r5, lr}
 80007a6:	4b29      	ldr	r3, [pc, #164]	@ (800084c <__swsetup_r+0xa8>)
 80007a8:	4605      	mov	r5, r0
 80007aa:	6818      	ldr	r0, [r3, #0]
 80007ac:	460c      	mov	r4, r1
 80007ae:	b118      	cbz	r0, 80007b8 <__swsetup_r+0x14>
 80007b0:	6a03      	ldr	r3, [r0, #32]
 80007b2:	b90b      	cbnz	r3, 80007b8 <__swsetup_r+0x14>
 80007b4:	f7ff fee0 	bl	8000578 <__sinit>
 80007b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007bc:	0719      	lsls	r1, r3, #28
 80007be:	d422      	bmi.n	8000806 <__swsetup_r+0x62>
 80007c0:	06da      	lsls	r2, r3, #27
 80007c2:	d407      	bmi.n	80007d4 <__swsetup_r+0x30>
 80007c4:	2209      	movs	r2, #9
 80007c6:	602a      	str	r2, [r5, #0]
 80007c8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80007cc:	81a3      	strh	r3, [r4, #12]
 80007ce:	f04f 30ff 	mov.w	r0, #4294967295
 80007d2:	e033      	b.n	800083c <__swsetup_r+0x98>
 80007d4:	0758      	lsls	r0, r3, #29
 80007d6:	d512      	bpl.n	80007fe <__swsetup_r+0x5a>
 80007d8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80007da:	b141      	cbz	r1, 80007ee <__swsetup_r+0x4a>
 80007dc:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80007e0:	4299      	cmp	r1, r3
 80007e2:	d002      	beq.n	80007ea <__swsetup_r+0x46>
 80007e4:	4628      	mov	r0, r5
 80007e6:	f000 f8af 	bl	8000948 <_free_r>
 80007ea:	2300      	movs	r3, #0
 80007ec:	6363      	str	r3, [r4, #52]	@ 0x34
 80007ee:	89a3      	ldrh	r3, [r4, #12]
 80007f0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80007f4:	81a3      	strh	r3, [r4, #12]
 80007f6:	2300      	movs	r3, #0
 80007f8:	6063      	str	r3, [r4, #4]
 80007fa:	6923      	ldr	r3, [r4, #16]
 80007fc:	6023      	str	r3, [r4, #0]
 80007fe:	89a3      	ldrh	r3, [r4, #12]
 8000800:	f043 0308 	orr.w	r3, r3, #8
 8000804:	81a3      	strh	r3, [r4, #12]
 8000806:	6923      	ldr	r3, [r4, #16]
 8000808:	b94b      	cbnz	r3, 800081e <__swsetup_r+0x7a>
 800080a:	89a3      	ldrh	r3, [r4, #12]
 800080c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000810:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000814:	d003      	beq.n	800081e <__swsetup_r+0x7a>
 8000816:	4621      	mov	r1, r4
 8000818:	4628      	mov	r0, r5
 800081a:	f000 fa5f 	bl	8000cdc <__smakebuf_r>
 800081e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000822:	f013 0201 	ands.w	r2, r3, #1
 8000826:	d00a      	beq.n	800083e <__swsetup_r+0x9a>
 8000828:	2200      	movs	r2, #0
 800082a:	60a2      	str	r2, [r4, #8]
 800082c:	6962      	ldr	r2, [r4, #20]
 800082e:	4252      	negs	r2, r2
 8000830:	61a2      	str	r2, [r4, #24]
 8000832:	6922      	ldr	r2, [r4, #16]
 8000834:	b942      	cbnz	r2, 8000848 <__swsetup_r+0xa4>
 8000836:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800083a:	d1c5      	bne.n	80007c8 <__swsetup_r+0x24>
 800083c:	bd38      	pop	{r3, r4, r5, pc}
 800083e:	0799      	lsls	r1, r3, #30
 8000840:	bf58      	it	pl
 8000842:	6962      	ldrpl	r2, [r4, #20]
 8000844:	60a2      	str	r2, [r4, #8]
 8000846:	e7f4      	b.n	8000832 <__swsetup_r+0x8e>
 8000848:	2000      	movs	r0, #0
 800084a:	e7f7      	b.n	800083c <__swsetup_r+0x98>
 800084c:	2000000c 	.word	0x2000000c

08000850 <memset>:
 8000850:	4402      	add	r2, r0
 8000852:	4603      	mov	r3, r0
 8000854:	4293      	cmp	r3, r2
 8000856:	d100      	bne.n	800085a <memset+0xa>
 8000858:	4770      	bx	lr
 800085a:	f803 1b01 	strb.w	r1, [r3], #1
 800085e:	e7f9      	b.n	8000854 <memset+0x4>

08000860 <_close_r>:
 8000860:	b538      	push	{r3, r4, r5, lr}
 8000862:	4d06      	ldr	r5, [pc, #24]	@ (800087c <_close_r+0x1c>)
 8000864:	2300      	movs	r3, #0
 8000866:	4604      	mov	r4, r0
 8000868:	4608      	mov	r0, r1
 800086a:	602b      	str	r3, [r5, #0]
 800086c:	f7ff fd63 	bl	8000336 <_close>
 8000870:	1c43      	adds	r3, r0, #1
 8000872:	d102      	bne.n	800087a <_close_r+0x1a>
 8000874:	682b      	ldr	r3, [r5, #0]
 8000876:	b103      	cbz	r3, 800087a <_close_r+0x1a>
 8000878:	6023      	str	r3, [r4, #0]
 800087a:	bd38      	pop	{r3, r4, r5, pc}
 800087c:	200001b8 	.word	0x200001b8

08000880 <_lseek_r>:
 8000880:	b538      	push	{r3, r4, r5, lr}
 8000882:	4d07      	ldr	r5, [pc, #28]	@ (80008a0 <_lseek_r+0x20>)
 8000884:	4604      	mov	r4, r0
 8000886:	4608      	mov	r0, r1
 8000888:	4611      	mov	r1, r2
 800088a:	2200      	movs	r2, #0
 800088c:	602a      	str	r2, [r5, #0]
 800088e:	461a      	mov	r2, r3
 8000890:	f7ff fd78 	bl	8000384 <_lseek>
 8000894:	1c43      	adds	r3, r0, #1
 8000896:	d102      	bne.n	800089e <_lseek_r+0x1e>
 8000898:	682b      	ldr	r3, [r5, #0]
 800089a:	b103      	cbz	r3, 800089e <_lseek_r+0x1e>
 800089c:	6023      	str	r3, [r4, #0]
 800089e:	bd38      	pop	{r3, r4, r5, pc}
 80008a0:	200001b8 	.word	0x200001b8

080008a4 <_read_r>:
 80008a4:	b538      	push	{r3, r4, r5, lr}
 80008a6:	4d07      	ldr	r5, [pc, #28]	@ (80008c4 <_read_r+0x20>)
 80008a8:	4604      	mov	r4, r0
 80008aa:	4608      	mov	r0, r1
 80008ac:	4611      	mov	r1, r2
 80008ae:	2200      	movs	r2, #0
 80008b0:	602a      	str	r2, [r5, #0]
 80008b2:	461a      	mov	r2, r3
 80008b4:	f7ff fd06 	bl	80002c4 <_read>
 80008b8:	1c43      	adds	r3, r0, #1
 80008ba:	d102      	bne.n	80008c2 <_read_r+0x1e>
 80008bc:	682b      	ldr	r3, [r5, #0]
 80008be:	b103      	cbz	r3, 80008c2 <_read_r+0x1e>
 80008c0:	6023      	str	r3, [r4, #0]
 80008c2:	bd38      	pop	{r3, r4, r5, pc}
 80008c4:	200001b8 	.word	0x200001b8

080008c8 <_write_r>:
 80008c8:	b538      	push	{r3, r4, r5, lr}
 80008ca:	4d07      	ldr	r5, [pc, #28]	@ (80008e8 <_write_r+0x20>)
 80008cc:	4604      	mov	r4, r0
 80008ce:	4608      	mov	r0, r1
 80008d0:	4611      	mov	r1, r2
 80008d2:	2200      	movs	r2, #0
 80008d4:	602a      	str	r2, [r5, #0]
 80008d6:	461a      	mov	r2, r3
 80008d8:	f7ff fd11 	bl	80002fe <_write>
 80008dc:	1c43      	adds	r3, r0, #1
 80008de:	d102      	bne.n	80008e6 <_write_r+0x1e>
 80008e0:	682b      	ldr	r3, [r5, #0]
 80008e2:	b103      	cbz	r3, 80008e6 <_write_r+0x1e>
 80008e4:	6023      	str	r3, [r4, #0]
 80008e6:	bd38      	pop	{r3, r4, r5, pc}
 80008e8:	200001b8 	.word	0x200001b8

080008ec <__errno>:
 80008ec:	4b01      	ldr	r3, [pc, #4]	@ (80008f4 <__errno+0x8>)
 80008ee:	6818      	ldr	r0, [r3, #0]
 80008f0:	4770      	bx	lr
 80008f2:	bf00      	nop
 80008f4:	2000000c 	.word	0x2000000c

080008f8 <__libc_init_array>:
 80008f8:	b570      	push	{r4, r5, r6, lr}
 80008fa:	4d0d      	ldr	r5, [pc, #52]	@ (8000930 <__libc_init_array+0x38>)
 80008fc:	4c0d      	ldr	r4, [pc, #52]	@ (8000934 <__libc_init_array+0x3c>)
 80008fe:	1b64      	subs	r4, r4, r5
 8000900:	10a4      	asrs	r4, r4, #2
 8000902:	2600      	movs	r6, #0
 8000904:	42a6      	cmp	r6, r4
 8000906:	d109      	bne.n	800091c <__libc_init_array+0x24>
 8000908:	4d0b      	ldr	r5, [pc, #44]	@ (8000938 <__libc_init_array+0x40>)
 800090a:	4c0c      	ldr	r4, [pc, #48]	@ (800093c <__libc_init_array+0x44>)
 800090c:	f000 fa54 	bl	8000db8 <_init>
 8000910:	1b64      	subs	r4, r4, r5
 8000912:	10a4      	asrs	r4, r4, #2
 8000914:	2600      	movs	r6, #0
 8000916:	42a6      	cmp	r6, r4
 8000918:	d105      	bne.n	8000926 <__libc_init_array+0x2e>
 800091a:	bd70      	pop	{r4, r5, r6, pc}
 800091c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000920:	4798      	blx	r3
 8000922:	3601      	adds	r6, #1
 8000924:	e7ee      	b.n	8000904 <__libc_init_array+0xc>
 8000926:	f855 3b04 	ldr.w	r3, [r5], #4
 800092a:	4798      	blx	r3
 800092c:	3601      	adds	r6, #1
 800092e:	e7f2      	b.n	8000916 <__libc_init_array+0x1e>
 8000930:	08000e30 	.word	0x08000e30
 8000934:	08000e30 	.word	0x08000e30
 8000938:	08000e30 	.word	0x08000e30
 800093c:	08000e34 	.word	0x08000e34

08000940 <__retarget_lock_init_recursive>:
 8000940:	4770      	bx	lr

08000942 <__retarget_lock_acquire_recursive>:
 8000942:	4770      	bx	lr

08000944 <__retarget_lock_release_recursive>:
 8000944:	4770      	bx	lr
	...

08000948 <_free_r>:
 8000948:	b538      	push	{r3, r4, r5, lr}
 800094a:	4605      	mov	r5, r0
 800094c:	2900      	cmp	r1, #0
 800094e:	d041      	beq.n	80009d4 <_free_r+0x8c>
 8000950:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000954:	1f0c      	subs	r4, r1, #4
 8000956:	2b00      	cmp	r3, #0
 8000958:	bfb8      	it	lt
 800095a:	18e4      	addlt	r4, r4, r3
 800095c:	f000 f8e0 	bl	8000b20 <__malloc_lock>
 8000960:	4a1d      	ldr	r2, [pc, #116]	@ (80009d8 <_free_r+0x90>)
 8000962:	6813      	ldr	r3, [r2, #0]
 8000964:	b933      	cbnz	r3, 8000974 <_free_r+0x2c>
 8000966:	6063      	str	r3, [r4, #4]
 8000968:	6014      	str	r4, [r2, #0]
 800096a:	4628      	mov	r0, r5
 800096c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000970:	f000 b8dc 	b.w	8000b2c <__malloc_unlock>
 8000974:	42a3      	cmp	r3, r4
 8000976:	d908      	bls.n	800098a <_free_r+0x42>
 8000978:	6820      	ldr	r0, [r4, #0]
 800097a:	1821      	adds	r1, r4, r0
 800097c:	428b      	cmp	r3, r1
 800097e:	bf01      	itttt	eq
 8000980:	6819      	ldreq	r1, [r3, #0]
 8000982:	685b      	ldreq	r3, [r3, #4]
 8000984:	1809      	addeq	r1, r1, r0
 8000986:	6021      	streq	r1, [r4, #0]
 8000988:	e7ed      	b.n	8000966 <_free_r+0x1e>
 800098a:	461a      	mov	r2, r3
 800098c:	685b      	ldr	r3, [r3, #4]
 800098e:	b10b      	cbz	r3, 8000994 <_free_r+0x4c>
 8000990:	42a3      	cmp	r3, r4
 8000992:	d9fa      	bls.n	800098a <_free_r+0x42>
 8000994:	6811      	ldr	r1, [r2, #0]
 8000996:	1850      	adds	r0, r2, r1
 8000998:	42a0      	cmp	r0, r4
 800099a:	d10b      	bne.n	80009b4 <_free_r+0x6c>
 800099c:	6820      	ldr	r0, [r4, #0]
 800099e:	4401      	add	r1, r0
 80009a0:	1850      	adds	r0, r2, r1
 80009a2:	4283      	cmp	r3, r0
 80009a4:	6011      	str	r1, [r2, #0]
 80009a6:	d1e0      	bne.n	800096a <_free_r+0x22>
 80009a8:	6818      	ldr	r0, [r3, #0]
 80009aa:	685b      	ldr	r3, [r3, #4]
 80009ac:	6053      	str	r3, [r2, #4]
 80009ae:	4408      	add	r0, r1
 80009b0:	6010      	str	r0, [r2, #0]
 80009b2:	e7da      	b.n	800096a <_free_r+0x22>
 80009b4:	d902      	bls.n	80009bc <_free_r+0x74>
 80009b6:	230c      	movs	r3, #12
 80009b8:	602b      	str	r3, [r5, #0]
 80009ba:	e7d6      	b.n	800096a <_free_r+0x22>
 80009bc:	6820      	ldr	r0, [r4, #0]
 80009be:	1821      	adds	r1, r4, r0
 80009c0:	428b      	cmp	r3, r1
 80009c2:	bf04      	itt	eq
 80009c4:	6819      	ldreq	r1, [r3, #0]
 80009c6:	685b      	ldreq	r3, [r3, #4]
 80009c8:	6063      	str	r3, [r4, #4]
 80009ca:	bf04      	itt	eq
 80009cc:	1809      	addeq	r1, r1, r0
 80009ce:	6021      	streq	r1, [r4, #0]
 80009d0:	6054      	str	r4, [r2, #4]
 80009d2:	e7ca      	b.n	800096a <_free_r+0x22>
 80009d4:	bd38      	pop	{r3, r4, r5, pc}
 80009d6:	bf00      	nop
 80009d8:	200001c4 	.word	0x200001c4

080009dc <sbrk_aligned>:
 80009dc:	b570      	push	{r4, r5, r6, lr}
 80009de:	4e0f      	ldr	r6, [pc, #60]	@ (8000a1c <sbrk_aligned+0x40>)
 80009e0:	460c      	mov	r4, r1
 80009e2:	6831      	ldr	r1, [r6, #0]
 80009e4:	4605      	mov	r5, r0
 80009e6:	b911      	cbnz	r1, 80009ee <sbrk_aligned+0x12>
 80009e8:	f000 f9d6 	bl	8000d98 <_sbrk_r>
 80009ec:	6030      	str	r0, [r6, #0]
 80009ee:	4621      	mov	r1, r4
 80009f0:	4628      	mov	r0, r5
 80009f2:	f000 f9d1 	bl	8000d98 <_sbrk_r>
 80009f6:	1c43      	adds	r3, r0, #1
 80009f8:	d103      	bne.n	8000a02 <sbrk_aligned+0x26>
 80009fa:	f04f 34ff 	mov.w	r4, #4294967295
 80009fe:	4620      	mov	r0, r4
 8000a00:	bd70      	pop	{r4, r5, r6, pc}
 8000a02:	1cc4      	adds	r4, r0, #3
 8000a04:	f024 0403 	bic.w	r4, r4, #3
 8000a08:	42a0      	cmp	r0, r4
 8000a0a:	d0f8      	beq.n	80009fe <sbrk_aligned+0x22>
 8000a0c:	1a21      	subs	r1, r4, r0
 8000a0e:	4628      	mov	r0, r5
 8000a10:	f000 f9c2 	bl	8000d98 <_sbrk_r>
 8000a14:	3001      	adds	r0, #1
 8000a16:	d1f2      	bne.n	80009fe <sbrk_aligned+0x22>
 8000a18:	e7ef      	b.n	80009fa <sbrk_aligned+0x1e>
 8000a1a:	bf00      	nop
 8000a1c:	200001c0 	.word	0x200001c0

08000a20 <_malloc_r>:
 8000a20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a24:	1ccd      	adds	r5, r1, #3
 8000a26:	f025 0503 	bic.w	r5, r5, #3
 8000a2a:	3508      	adds	r5, #8
 8000a2c:	2d0c      	cmp	r5, #12
 8000a2e:	bf38      	it	cc
 8000a30:	250c      	movcc	r5, #12
 8000a32:	2d00      	cmp	r5, #0
 8000a34:	4606      	mov	r6, r0
 8000a36:	db01      	blt.n	8000a3c <_malloc_r+0x1c>
 8000a38:	42a9      	cmp	r1, r5
 8000a3a:	d904      	bls.n	8000a46 <_malloc_r+0x26>
 8000a3c:	230c      	movs	r3, #12
 8000a3e:	6033      	str	r3, [r6, #0]
 8000a40:	2000      	movs	r0, #0
 8000a42:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a46:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000b1c <_malloc_r+0xfc>
 8000a4a:	f000 f869 	bl	8000b20 <__malloc_lock>
 8000a4e:	f8d8 3000 	ldr.w	r3, [r8]
 8000a52:	461c      	mov	r4, r3
 8000a54:	bb44      	cbnz	r4, 8000aa8 <_malloc_r+0x88>
 8000a56:	4629      	mov	r1, r5
 8000a58:	4630      	mov	r0, r6
 8000a5a:	f7ff ffbf 	bl	80009dc <sbrk_aligned>
 8000a5e:	1c43      	adds	r3, r0, #1
 8000a60:	4604      	mov	r4, r0
 8000a62:	d158      	bne.n	8000b16 <_malloc_r+0xf6>
 8000a64:	f8d8 4000 	ldr.w	r4, [r8]
 8000a68:	4627      	mov	r7, r4
 8000a6a:	2f00      	cmp	r7, #0
 8000a6c:	d143      	bne.n	8000af6 <_malloc_r+0xd6>
 8000a6e:	2c00      	cmp	r4, #0
 8000a70:	d04b      	beq.n	8000b0a <_malloc_r+0xea>
 8000a72:	6823      	ldr	r3, [r4, #0]
 8000a74:	4639      	mov	r1, r7
 8000a76:	4630      	mov	r0, r6
 8000a78:	eb04 0903 	add.w	r9, r4, r3
 8000a7c:	f000 f98c 	bl	8000d98 <_sbrk_r>
 8000a80:	4581      	cmp	r9, r0
 8000a82:	d142      	bne.n	8000b0a <_malloc_r+0xea>
 8000a84:	6821      	ldr	r1, [r4, #0]
 8000a86:	1a6d      	subs	r5, r5, r1
 8000a88:	4629      	mov	r1, r5
 8000a8a:	4630      	mov	r0, r6
 8000a8c:	f7ff ffa6 	bl	80009dc <sbrk_aligned>
 8000a90:	3001      	adds	r0, #1
 8000a92:	d03a      	beq.n	8000b0a <_malloc_r+0xea>
 8000a94:	6823      	ldr	r3, [r4, #0]
 8000a96:	442b      	add	r3, r5
 8000a98:	6023      	str	r3, [r4, #0]
 8000a9a:	f8d8 3000 	ldr.w	r3, [r8]
 8000a9e:	685a      	ldr	r2, [r3, #4]
 8000aa0:	bb62      	cbnz	r2, 8000afc <_malloc_r+0xdc>
 8000aa2:	f8c8 7000 	str.w	r7, [r8]
 8000aa6:	e00f      	b.n	8000ac8 <_malloc_r+0xa8>
 8000aa8:	6822      	ldr	r2, [r4, #0]
 8000aaa:	1b52      	subs	r2, r2, r5
 8000aac:	d420      	bmi.n	8000af0 <_malloc_r+0xd0>
 8000aae:	2a0b      	cmp	r2, #11
 8000ab0:	d917      	bls.n	8000ae2 <_malloc_r+0xc2>
 8000ab2:	1961      	adds	r1, r4, r5
 8000ab4:	42a3      	cmp	r3, r4
 8000ab6:	6025      	str	r5, [r4, #0]
 8000ab8:	bf18      	it	ne
 8000aba:	6059      	strne	r1, [r3, #4]
 8000abc:	6863      	ldr	r3, [r4, #4]
 8000abe:	bf08      	it	eq
 8000ac0:	f8c8 1000 	streq.w	r1, [r8]
 8000ac4:	5162      	str	r2, [r4, r5]
 8000ac6:	604b      	str	r3, [r1, #4]
 8000ac8:	4630      	mov	r0, r6
 8000aca:	f000 f82f 	bl	8000b2c <__malloc_unlock>
 8000ace:	f104 000b 	add.w	r0, r4, #11
 8000ad2:	1d23      	adds	r3, r4, #4
 8000ad4:	f020 0007 	bic.w	r0, r0, #7
 8000ad8:	1ac2      	subs	r2, r0, r3
 8000ada:	bf1c      	itt	ne
 8000adc:	1a1b      	subne	r3, r3, r0
 8000ade:	50a3      	strne	r3, [r4, r2]
 8000ae0:	e7af      	b.n	8000a42 <_malloc_r+0x22>
 8000ae2:	6862      	ldr	r2, [r4, #4]
 8000ae4:	42a3      	cmp	r3, r4
 8000ae6:	bf0c      	ite	eq
 8000ae8:	f8c8 2000 	streq.w	r2, [r8]
 8000aec:	605a      	strne	r2, [r3, #4]
 8000aee:	e7eb      	b.n	8000ac8 <_malloc_r+0xa8>
 8000af0:	4623      	mov	r3, r4
 8000af2:	6864      	ldr	r4, [r4, #4]
 8000af4:	e7ae      	b.n	8000a54 <_malloc_r+0x34>
 8000af6:	463c      	mov	r4, r7
 8000af8:	687f      	ldr	r7, [r7, #4]
 8000afa:	e7b6      	b.n	8000a6a <_malloc_r+0x4a>
 8000afc:	461a      	mov	r2, r3
 8000afe:	685b      	ldr	r3, [r3, #4]
 8000b00:	42a3      	cmp	r3, r4
 8000b02:	d1fb      	bne.n	8000afc <_malloc_r+0xdc>
 8000b04:	2300      	movs	r3, #0
 8000b06:	6053      	str	r3, [r2, #4]
 8000b08:	e7de      	b.n	8000ac8 <_malloc_r+0xa8>
 8000b0a:	230c      	movs	r3, #12
 8000b0c:	6033      	str	r3, [r6, #0]
 8000b0e:	4630      	mov	r0, r6
 8000b10:	f000 f80c 	bl	8000b2c <__malloc_unlock>
 8000b14:	e794      	b.n	8000a40 <_malloc_r+0x20>
 8000b16:	6005      	str	r5, [r0, #0]
 8000b18:	e7d6      	b.n	8000ac8 <_malloc_r+0xa8>
 8000b1a:	bf00      	nop
 8000b1c:	200001c4 	.word	0x200001c4

08000b20 <__malloc_lock>:
 8000b20:	4801      	ldr	r0, [pc, #4]	@ (8000b28 <__malloc_lock+0x8>)
 8000b22:	f7ff bf0e 	b.w	8000942 <__retarget_lock_acquire_recursive>
 8000b26:	bf00      	nop
 8000b28:	200001bc 	.word	0x200001bc

08000b2c <__malloc_unlock>:
 8000b2c:	4801      	ldr	r0, [pc, #4]	@ (8000b34 <__malloc_unlock+0x8>)
 8000b2e:	f7ff bf09 	b.w	8000944 <__retarget_lock_release_recursive>
 8000b32:	bf00      	nop
 8000b34:	200001bc 	.word	0x200001bc

08000b38 <__sflush_r>:
 8000b38:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000b3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b40:	0716      	lsls	r6, r2, #28
 8000b42:	4605      	mov	r5, r0
 8000b44:	460c      	mov	r4, r1
 8000b46:	d454      	bmi.n	8000bf2 <__sflush_r+0xba>
 8000b48:	684b      	ldr	r3, [r1, #4]
 8000b4a:	2b00      	cmp	r3, #0
 8000b4c:	dc02      	bgt.n	8000b54 <__sflush_r+0x1c>
 8000b4e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000b50:	2b00      	cmp	r3, #0
 8000b52:	dd48      	ble.n	8000be6 <__sflush_r+0xae>
 8000b54:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000b56:	2e00      	cmp	r6, #0
 8000b58:	d045      	beq.n	8000be6 <__sflush_r+0xae>
 8000b5a:	2300      	movs	r3, #0
 8000b5c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000b60:	682f      	ldr	r7, [r5, #0]
 8000b62:	6a21      	ldr	r1, [r4, #32]
 8000b64:	602b      	str	r3, [r5, #0]
 8000b66:	d030      	beq.n	8000bca <__sflush_r+0x92>
 8000b68:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000b6a:	89a3      	ldrh	r3, [r4, #12]
 8000b6c:	0759      	lsls	r1, r3, #29
 8000b6e:	d505      	bpl.n	8000b7c <__sflush_r+0x44>
 8000b70:	6863      	ldr	r3, [r4, #4]
 8000b72:	1ad2      	subs	r2, r2, r3
 8000b74:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000b76:	b10b      	cbz	r3, 8000b7c <__sflush_r+0x44>
 8000b78:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000b7a:	1ad2      	subs	r2, r2, r3
 8000b7c:	2300      	movs	r3, #0
 8000b7e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000b80:	6a21      	ldr	r1, [r4, #32]
 8000b82:	4628      	mov	r0, r5
 8000b84:	47b0      	blx	r6
 8000b86:	1c43      	adds	r3, r0, #1
 8000b88:	89a3      	ldrh	r3, [r4, #12]
 8000b8a:	d106      	bne.n	8000b9a <__sflush_r+0x62>
 8000b8c:	6829      	ldr	r1, [r5, #0]
 8000b8e:	291d      	cmp	r1, #29
 8000b90:	d82b      	bhi.n	8000bea <__sflush_r+0xb2>
 8000b92:	4a2a      	ldr	r2, [pc, #168]	@ (8000c3c <__sflush_r+0x104>)
 8000b94:	410a      	asrs	r2, r1
 8000b96:	07d6      	lsls	r6, r2, #31
 8000b98:	d427      	bmi.n	8000bea <__sflush_r+0xb2>
 8000b9a:	2200      	movs	r2, #0
 8000b9c:	6062      	str	r2, [r4, #4]
 8000b9e:	04d9      	lsls	r1, r3, #19
 8000ba0:	6922      	ldr	r2, [r4, #16]
 8000ba2:	6022      	str	r2, [r4, #0]
 8000ba4:	d504      	bpl.n	8000bb0 <__sflush_r+0x78>
 8000ba6:	1c42      	adds	r2, r0, #1
 8000ba8:	d101      	bne.n	8000bae <__sflush_r+0x76>
 8000baa:	682b      	ldr	r3, [r5, #0]
 8000bac:	b903      	cbnz	r3, 8000bb0 <__sflush_r+0x78>
 8000bae:	6560      	str	r0, [r4, #84]	@ 0x54
 8000bb0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000bb2:	602f      	str	r7, [r5, #0]
 8000bb4:	b1b9      	cbz	r1, 8000be6 <__sflush_r+0xae>
 8000bb6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000bba:	4299      	cmp	r1, r3
 8000bbc:	d002      	beq.n	8000bc4 <__sflush_r+0x8c>
 8000bbe:	4628      	mov	r0, r5
 8000bc0:	f7ff fec2 	bl	8000948 <_free_r>
 8000bc4:	2300      	movs	r3, #0
 8000bc6:	6363      	str	r3, [r4, #52]	@ 0x34
 8000bc8:	e00d      	b.n	8000be6 <__sflush_r+0xae>
 8000bca:	2301      	movs	r3, #1
 8000bcc:	4628      	mov	r0, r5
 8000bce:	47b0      	blx	r6
 8000bd0:	4602      	mov	r2, r0
 8000bd2:	1c50      	adds	r0, r2, #1
 8000bd4:	d1c9      	bne.n	8000b6a <__sflush_r+0x32>
 8000bd6:	682b      	ldr	r3, [r5, #0]
 8000bd8:	2b00      	cmp	r3, #0
 8000bda:	d0c6      	beq.n	8000b6a <__sflush_r+0x32>
 8000bdc:	2b1d      	cmp	r3, #29
 8000bde:	d001      	beq.n	8000be4 <__sflush_r+0xac>
 8000be0:	2b16      	cmp	r3, #22
 8000be2:	d11e      	bne.n	8000c22 <__sflush_r+0xea>
 8000be4:	602f      	str	r7, [r5, #0]
 8000be6:	2000      	movs	r0, #0
 8000be8:	e022      	b.n	8000c30 <__sflush_r+0xf8>
 8000bea:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000bee:	b21b      	sxth	r3, r3
 8000bf0:	e01b      	b.n	8000c2a <__sflush_r+0xf2>
 8000bf2:	690f      	ldr	r7, [r1, #16]
 8000bf4:	2f00      	cmp	r7, #0
 8000bf6:	d0f6      	beq.n	8000be6 <__sflush_r+0xae>
 8000bf8:	0793      	lsls	r3, r2, #30
 8000bfa:	680e      	ldr	r6, [r1, #0]
 8000bfc:	bf08      	it	eq
 8000bfe:	694b      	ldreq	r3, [r1, #20]
 8000c00:	600f      	str	r7, [r1, #0]
 8000c02:	bf18      	it	ne
 8000c04:	2300      	movne	r3, #0
 8000c06:	eba6 0807 	sub.w	r8, r6, r7
 8000c0a:	608b      	str	r3, [r1, #8]
 8000c0c:	f1b8 0f00 	cmp.w	r8, #0
 8000c10:	dde9      	ble.n	8000be6 <__sflush_r+0xae>
 8000c12:	6a21      	ldr	r1, [r4, #32]
 8000c14:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8000c16:	4643      	mov	r3, r8
 8000c18:	463a      	mov	r2, r7
 8000c1a:	4628      	mov	r0, r5
 8000c1c:	47b0      	blx	r6
 8000c1e:	2800      	cmp	r0, #0
 8000c20:	dc08      	bgt.n	8000c34 <__sflush_r+0xfc>
 8000c22:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c26:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000c2a:	81a3      	strh	r3, [r4, #12]
 8000c2c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c34:	4407      	add	r7, r0
 8000c36:	eba8 0800 	sub.w	r8, r8, r0
 8000c3a:	e7e7      	b.n	8000c0c <__sflush_r+0xd4>
 8000c3c:	dfbffffe 	.word	0xdfbffffe

08000c40 <_fflush_r>:
 8000c40:	b538      	push	{r3, r4, r5, lr}
 8000c42:	690b      	ldr	r3, [r1, #16]
 8000c44:	4605      	mov	r5, r0
 8000c46:	460c      	mov	r4, r1
 8000c48:	b913      	cbnz	r3, 8000c50 <_fflush_r+0x10>
 8000c4a:	2500      	movs	r5, #0
 8000c4c:	4628      	mov	r0, r5
 8000c4e:	bd38      	pop	{r3, r4, r5, pc}
 8000c50:	b118      	cbz	r0, 8000c5a <_fflush_r+0x1a>
 8000c52:	6a03      	ldr	r3, [r0, #32]
 8000c54:	b90b      	cbnz	r3, 8000c5a <_fflush_r+0x1a>
 8000c56:	f7ff fc8f 	bl	8000578 <__sinit>
 8000c5a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c5e:	2b00      	cmp	r3, #0
 8000c60:	d0f3      	beq.n	8000c4a <_fflush_r+0xa>
 8000c62:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000c64:	07d0      	lsls	r0, r2, #31
 8000c66:	d404      	bmi.n	8000c72 <_fflush_r+0x32>
 8000c68:	0599      	lsls	r1, r3, #22
 8000c6a:	d402      	bmi.n	8000c72 <_fflush_r+0x32>
 8000c6c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000c6e:	f7ff fe68 	bl	8000942 <__retarget_lock_acquire_recursive>
 8000c72:	4628      	mov	r0, r5
 8000c74:	4621      	mov	r1, r4
 8000c76:	f7ff ff5f 	bl	8000b38 <__sflush_r>
 8000c7a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000c7c:	07da      	lsls	r2, r3, #31
 8000c7e:	4605      	mov	r5, r0
 8000c80:	d4e4      	bmi.n	8000c4c <_fflush_r+0xc>
 8000c82:	89a3      	ldrh	r3, [r4, #12]
 8000c84:	059b      	lsls	r3, r3, #22
 8000c86:	d4e1      	bmi.n	8000c4c <_fflush_r+0xc>
 8000c88:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000c8a:	f7ff fe5b 	bl	8000944 <__retarget_lock_release_recursive>
 8000c8e:	e7dd      	b.n	8000c4c <_fflush_r+0xc>

08000c90 <__swhatbuf_r>:
 8000c90:	b570      	push	{r4, r5, r6, lr}
 8000c92:	460c      	mov	r4, r1
 8000c94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c98:	2900      	cmp	r1, #0
 8000c9a:	b096      	sub	sp, #88	@ 0x58
 8000c9c:	4615      	mov	r5, r2
 8000c9e:	461e      	mov	r6, r3
 8000ca0:	da0d      	bge.n	8000cbe <__swhatbuf_r+0x2e>
 8000ca2:	89a3      	ldrh	r3, [r4, #12]
 8000ca4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8000ca8:	f04f 0100 	mov.w	r1, #0
 8000cac:	bf14      	ite	ne
 8000cae:	2340      	movne	r3, #64	@ 0x40
 8000cb0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8000cb4:	2000      	movs	r0, #0
 8000cb6:	6031      	str	r1, [r6, #0]
 8000cb8:	602b      	str	r3, [r5, #0]
 8000cba:	b016      	add	sp, #88	@ 0x58
 8000cbc:	bd70      	pop	{r4, r5, r6, pc}
 8000cbe:	466a      	mov	r2, sp
 8000cc0:	f000 f848 	bl	8000d54 <_fstat_r>
 8000cc4:	2800      	cmp	r0, #0
 8000cc6:	dbec      	blt.n	8000ca2 <__swhatbuf_r+0x12>
 8000cc8:	9901      	ldr	r1, [sp, #4]
 8000cca:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8000cce:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8000cd2:	4259      	negs	r1, r3
 8000cd4:	4159      	adcs	r1, r3
 8000cd6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000cda:	e7eb      	b.n	8000cb4 <__swhatbuf_r+0x24>

08000cdc <__smakebuf_r>:
 8000cdc:	898b      	ldrh	r3, [r1, #12]
 8000cde:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000ce0:	079d      	lsls	r5, r3, #30
 8000ce2:	4606      	mov	r6, r0
 8000ce4:	460c      	mov	r4, r1
 8000ce6:	d507      	bpl.n	8000cf8 <__smakebuf_r+0x1c>
 8000ce8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8000cec:	6023      	str	r3, [r4, #0]
 8000cee:	6123      	str	r3, [r4, #16]
 8000cf0:	2301      	movs	r3, #1
 8000cf2:	6163      	str	r3, [r4, #20]
 8000cf4:	b003      	add	sp, #12
 8000cf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000cf8:	ab01      	add	r3, sp, #4
 8000cfa:	466a      	mov	r2, sp
 8000cfc:	f7ff ffc8 	bl	8000c90 <__swhatbuf_r>
 8000d00:	9f00      	ldr	r7, [sp, #0]
 8000d02:	4605      	mov	r5, r0
 8000d04:	4639      	mov	r1, r7
 8000d06:	4630      	mov	r0, r6
 8000d08:	f7ff fe8a 	bl	8000a20 <_malloc_r>
 8000d0c:	b948      	cbnz	r0, 8000d22 <__smakebuf_r+0x46>
 8000d0e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000d12:	059a      	lsls	r2, r3, #22
 8000d14:	d4ee      	bmi.n	8000cf4 <__smakebuf_r+0x18>
 8000d16:	f023 0303 	bic.w	r3, r3, #3
 8000d1a:	f043 0302 	orr.w	r3, r3, #2
 8000d1e:	81a3      	strh	r3, [r4, #12]
 8000d20:	e7e2      	b.n	8000ce8 <__smakebuf_r+0xc>
 8000d22:	89a3      	ldrh	r3, [r4, #12]
 8000d24:	6020      	str	r0, [r4, #0]
 8000d26:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000d2a:	81a3      	strh	r3, [r4, #12]
 8000d2c:	9b01      	ldr	r3, [sp, #4]
 8000d2e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8000d32:	b15b      	cbz	r3, 8000d4c <__smakebuf_r+0x70>
 8000d34:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000d38:	4630      	mov	r0, r6
 8000d3a:	f000 f81d 	bl	8000d78 <_isatty_r>
 8000d3e:	b128      	cbz	r0, 8000d4c <__smakebuf_r+0x70>
 8000d40:	89a3      	ldrh	r3, [r4, #12]
 8000d42:	f023 0303 	bic.w	r3, r3, #3
 8000d46:	f043 0301 	orr.w	r3, r3, #1
 8000d4a:	81a3      	strh	r3, [r4, #12]
 8000d4c:	89a3      	ldrh	r3, [r4, #12]
 8000d4e:	431d      	orrs	r5, r3
 8000d50:	81a5      	strh	r5, [r4, #12]
 8000d52:	e7cf      	b.n	8000cf4 <__smakebuf_r+0x18>

08000d54 <_fstat_r>:
 8000d54:	b538      	push	{r3, r4, r5, lr}
 8000d56:	4d07      	ldr	r5, [pc, #28]	@ (8000d74 <_fstat_r+0x20>)
 8000d58:	2300      	movs	r3, #0
 8000d5a:	4604      	mov	r4, r0
 8000d5c:	4608      	mov	r0, r1
 8000d5e:	4611      	mov	r1, r2
 8000d60:	602b      	str	r3, [r5, #0]
 8000d62:	f7ff faf4 	bl	800034e <_fstat>
 8000d66:	1c43      	adds	r3, r0, #1
 8000d68:	d102      	bne.n	8000d70 <_fstat_r+0x1c>
 8000d6a:	682b      	ldr	r3, [r5, #0]
 8000d6c:	b103      	cbz	r3, 8000d70 <_fstat_r+0x1c>
 8000d6e:	6023      	str	r3, [r4, #0]
 8000d70:	bd38      	pop	{r3, r4, r5, pc}
 8000d72:	bf00      	nop
 8000d74:	200001b8 	.word	0x200001b8

08000d78 <_isatty_r>:
 8000d78:	b538      	push	{r3, r4, r5, lr}
 8000d7a:	4d06      	ldr	r5, [pc, #24]	@ (8000d94 <_isatty_r+0x1c>)
 8000d7c:	2300      	movs	r3, #0
 8000d7e:	4604      	mov	r4, r0
 8000d80:	4608      	mov	r0, r1
 8000d82:	602b      	str	r3, [r5, #0]
 8000d84:	f7ff faf3 	bl	800036e <_isatty>
 8000d88:	1c43      	adds	r3, r0, #1
 8000d8a:	d102      	bne.n	8000d92 <_isatty_r+0x1a>
 8000d8c:	682b      	ldr	r3, [r5, #0]
 8000d8e:	b103      	cbz	r3, 8000d92 <_isatty_r+0x1a>
 8000d90:	6023      	str	r3, [r4, #0]
 8000d92:	bd38      	pop	{r3, r4, r5, pc}
 8000d94:	200001b8 	.word	0x200001b8

08000d98 <_sbrk_r>:
 8000d98:	b538      	push	{r3, r4, r5, lr}
 8000d9a:	4d06      	ldr	r5, [pc, #24]	@ (8000db4 <_sbrk_r+0x1c>)
 8000d9c:	2300      	movs	r3, #0
 8000d9e:	4604      	mov	r4, r0
 8000da0:	4608      	mov	r0, r1
 8000da2:	602b      	str	r3, [r5, #0]
 8000da4:	f7ff fafc 	bl	80003a0 <_sbrk>
 8000da8:	1c43      	adds	r3, r0, #1
 8000daa:	d102      	bne.n	8000db2 <_sbrk_r+0x1a>
 8000dac:	682b      	ldr	r3, [r5, #0]
 8000dae:	b103      	cbz	r3, 8000db2 <_sbrk_r+0x1a>
 8000db0:	6023      	str	r3, [r4, #0]
 8000db2:	bd38      	pop	{r3, r4, r5, pc}
 8000db4:	200001b8 	.word	0x200001b8

08000db8 <_init>:
 8000db8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dba:	bf00      	nop
 8000dbc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000dbe:	bc08      	pop	{r3}
 8000dc0:	469e      	mov	lr, r3
 8000dc2:	4770      	bx	lr

08000dc4 <_fini>:
 8000dc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dc6:	bf00      	nop
 8000dc8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000dca:	bc08      	pop	{r3}
 8000dcc:	469e      	mov	lr, r3
 8000dce:	4770      	bx	lr
